{"ast":null,"code":"// Varibles\n//Labels for the markers by clicking on the screen\nconst labels = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\nlet labelIndex = 0;\nlet markers = [];\nlet userDestination = {};\nvar origin = \"\";\nvar destination = \"\";\n$(function () {\n  // add input listeners\n  google.maps.event.addDomListener(window, \"load\", function () {\n    var from_places = new google.maps.places.Autocomplete(document.getElementById(\"from_places\"));\n    var to_places = new google.maps.places.Autocomplete(document.getElementById(\"to_places\"));\n    google.maps.event.addListener(from_places, \"place_changed\", function () {\n      var from_place = from_places.getPlace();\n      var from_address = from_place.formatted_address;\n      $(\"#origin\").val(from_address);\n    });\n    google.maps.event.addListener(to_places, \"place_changed\", function () {\n      var to_place = to_places.getPlace();\n      var to_address = to_place.formatted_address;\n      $(\"#destination\").val(to_address);\n    });\n  }); // calculate distance\n\n  function calculateDistance() {\n    origin = $(\"#origin\").val();\n    destination = $(\"#destination\").val();\n    var service = new google.maps.DistanceMatrixService();\n    service.getDistanceMatrix({\n      origins: [origin],\n      destinations: [destination],\n      travelMode: google.maps.TravelMode.DRIVING,\n      unitSystem: google.maps.UnitSystem.IMPERIAL,\n      // miles and feet.\n      // unitSystem: google.maps.UnitSystem.metric, // kilometers and meters.\n      avoidHighways: false,\n      avoidTolls: false\n    }, callback);\n  } // get distance results\n\n\n  function callback(response, status) {\n    if (status != google.maps.DistanceMatrixStatus.OK) {\n      $(\"#result\").html(err);\n    } else {\n      var origin = response.originAddresses[0];\n      console.log(origin);\n      var destination = response.destinationAddresses[0];\n      console.log(destination);\n\n      if (response.rows[0].elements[0].status === \"ZERO_RESULTS\") {\n        $(\"#result\").html(\"Better get on a plane. There are no roads between \" + origin + \" and \" + destination);\n      } else {\n        var distance = response.rows[0].elements[0].distance; //console.log(distance);\n\n        var duration = response.rows[0].elements[0].duration; //console.log(duration);\n        //console.log(response.rows[0].elements[0].distance);\n\n        var distance_in_kilo = distance.value / 1000; // the kilom\n\n        var distance_in_mile = distance.value / 1609.34; // the mile\n        //console.log(distance_in_kilo);\n        //console.log(distance_in_mile);\n\n        var duration_text = duration.text;\n        var duration_value = duration.value;\n        $(\"#mile\").html(`Distance in Miles: ${distance_in_mile.toFixed(2)}`);\n        $(\"#kilo\").html(`Distance in Kilometers: ${distance_in_kilo.toFixed(2)}`);\n        $(\"#text\").html(`Distance in Minutes: ${duration_text}`);\n        $(\"#minute\").html(`Distance in Seconds: ${duration_value}`);\n        $(\"#from\").html(`Distance From: ${origin}`);\n        $(\"#to\").text(`Distance to: ${destination}`);\n      }\n    }\n  } // print results on submit the form initialize a new map search \n\n\n  $(\"#distance_form\").submit(function (e) {\n    e.preventDefault();\n    calculateDistance();\n    getLocation();\n  });\n}); //gets current location \n\nfunction getLocation() {\n  var returnObject = {};\n\n  if ('geolocation' in navigator) {\n    navigator.geolocation.getCurrentPosition(position => {\n      returnObject[\"lat\"] = position.coords.latitude;\n      returnObject[\"lng\"] = position.coords.longitude;\n      initMap(returnObject.lat, returnObject.lng);\n    });\n\n    if (typeof lat === 'undefined' && typeof lng === 'undefined') {\n      return returnObject['lat'], returnObject['lng'];\n    }\n  }\n} //main google maps API\n\n\nfunction initMap(latitude, longitude) {\n  const userLocation = {\n    lat: latitude,\n    lng: longitude\n  };\n  const map = new google.maps.Map(document.getElementById(\"map\"), {\n    center: userLocation,\n    zoom: 15 //mapTypeId: google.maps.mapTypeId.ROADMAP Not needed for now\n\n  }); // user marker\n\n  var mk1 = new google.maps.Marker({\n    position: userLocation,\n    map\n  }); // This event listener calls addMarker() when the map is clicked.\n\n  google.maps.event.addListener(map, \"click\", event => {\n    addMarker(event.latLng, map);\n  });\n  google.maps.event.addListener(markers, 'click', function (event) {\n    var latitude = document.getElementById(\"maps_latitude\").value = event.latLng.lat();\n    var longitude = document.getElementById(\"maps_longitude\").value = event.latLng.lng();\n    userDestination = {\n      lat: latitude,\n      lng: longitude\n    };\n  }); //--------------------------//directions route here!-------------------------\n\n  let directionsService = new google.maps.DirectionsService();\n  let directionsRenderer = new google.maps.DirectionsRenderer();\n  directionsRenderer.setMap(map); // Existing map object displays directions\n  // Create route from existing points used for markers\n\n  const route = {\n    origin: origin,\n    destination: destination,\n    travelMode: google.maps.TravelMode.DRIVING\n  };\n  directionsService.route(route, function (response, status) {\n    // anonymous function to capture directions\n    if (status !== 'OK') {\n      window.alert('Directions request failed due to ' + status);\n      return;\n    } else {\n      directionsRenderer.setDirections(response); // Add route to the map\n\n      var directionsData = response.routes[0].legs[0]; // Get data about the mapped route\n\n      if (!directionsData) {\n        window.alert('Directions request failed');\n        return;\n      } else {\n        document.getElementById('msg').innerHTML += \" Driving distance is \" + directionsData.distance.text + \" (\" + directionsData.duration.text + \").\";\n      }\n    }\n  });\n} //--------------------------//directions route here!-------------------------\n//function to integate more markers on the map where location is the center lat lng\n\n\nfunction addMarker(location, map) {\n  new google.maps.Marker({\n    position: location,\n    //{ lat:latitude, lng:longitude},\n    label: labels[labelIndex++ % labels.length],\n    map: map,\n    draggable: true\n  });\n}","map":{"version":3,"names":["labels","labelIndex","markers","userDestination","origin","destination","$","google","maps","event","addDomListener","window","from_places","places","Autocomplete","document","getElementById","to_places","addListener","from_place","getPlace","from_address","formatted_address","val","to_place","to_address","calculateDistance","service","DistanceMatrixService","getDistanceMatrix","origins","destinations","travelMode","TravelMode","DRIVING","unitSystem","UnitSystem","IMPERIAL","avoidHighways","avoidTolls","callback","response","status","DistanceMatrixStatus","OK","html","err","originAddresses","console","log","destinationAddresses","rows","elements","distance","duration","distance_in_kilo","value","distance_in_mile","duration_text","text","duration_value","toFixed","submit","e","preventDefault","getLocation","returnObject","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","initMap","lat","lng","userLocation","map","Map","center","zoom","mk1","Marker","addMarker","latLng","directionsService","DirectionsService","directionsRenderer","DirectionsRenderer","setMap","route","alert","setDirections","directionsData","routes","legs","innerHTML","location","label","length","draggable"],"sources":["C:/Users/f7bpt3y/Desktop/Code folder/RideGreen/pay-firebase-map/src/components/map.js"],"sourcesContent":["// Varibles\r\n//Labels for the markers by clicking on the screen\r\nconst labels = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\r\nlet labelIndex =0;\r\nlet markers = [];\r\nlet userDestination ={};\r\n\r\nvar origin=\"\";\r\nvar destination =\"\";\r\n\r\n$(function () {\r\n    // add input listeners\r\n    google.maps.event.addDomListener(window, \"load\", function () {\r\n        var from_places = new google.maps.places.Autocomplete(\r\n            document.getElementById(\"from_places\")\r\n        );\r\n        var to_places = new google.maps.places.Autocomplete(\r\n            document.getElementById(\"to_places\")\r\n        );\r\n\r\n        google.maps.event.addListener(\r\n            from_places,\r\n            \"place_changed\",\r\n            function () {\r\n                var from_place = from_places.getPlace();\r\n                var from_address = from_place.formatted_address;\r\n                $(\"#origin\").val(from_address);\r\n            }\r\n        );\r\n\r\n        google.maps.event.addListener(\r\n            to_places,\r\n            \"place_changed\",\r\n            function () {\r\n                var to_place = to_places.getPlace();\r\n                var to_address = to_place.formatted_address;\r\n                $(\"#destination\").val(to_address);\r\n            }\r\n        );\r\n    });\r\n    // calculate distance\r\n    function calculateDistance() {\r\n        origin = $(\"#origin\").val();\r\n        destination = $(\"#destination\").val();\r\n        var service = new google.maps.DistanceMatrixService();\r\n        service.getDistanceMatrix(\r\n            {\r\n                origins: [origin],\r\n                destinations: [destination],\r\n                travelMode: google.maps.TravelMode.DRIVING,\r\n                unitSystem: google.maps.UnitSystem.IMPERIAL, // miles and feet.\r\n                // unitSystem: google.maps.UnitSystem.metric, // kilometers and meters.\r\n                avoidHighways: false,\r\n                avoidTolls: false,\r\n            },\r\n            callback\r\n        );\r\n    }\r\n    // get distance results\r\n    function callback(response, status) {\r\n        if (status != google.maps.DistanceMatrixStatus.OK) {\r\n            $(\"#result\").html(err);\r\n        } else {\r\n            var origin = response.originAddresses[0];\r\n            console.log(origin);\r\n            var destination = response.destinationAddresses[0];\r\n            console.log(destination);\r\n            if (response.rows[0].elements[0].status === \"ZERO_RESULTS\") {\r\n                $(\"#result\").html(\"Better get on a plane. There are no roads between \" +\r\n                    origin +\r\n                    \" and \" +\r\n                    destination\r\n                );\r\n            } else {\r\n                var distance = response.rows[0].elements[0].distance;\r\n                //console.log(distance);\r\n                var duration = response.rows[0].elements[0].duration;\r\n                //console.log(duration);\r\n                //console.log(response.rows[0].elements[0].distance);\r\n                var distance_in_kilo = distance.value / 1000; // the kilom\r\n                var distance_in_mile = distance.value / 1609.34; // the mile\r\n                //console.log(distance_in_kilo);\r\n                //console.log(distance_in_mile);\r\n                var duration_text = duration.text;\r\n                var duration_value = duration.value;\r\n                $(\"#mile\").html(`Distance in Miles: ${distance_in_mile.toFixed(2)}`);\r\n                $(\"#kilo\").html(`Distance in Kilometers: ${distance_in_kilo.toFixed(2)}`);\r\n                $(\"#text\").html(`Distance in Minutes: ${duration_text}`); \r\n                $(\"#minute\").html(`Distance in Seconds: ${duration_value}`);\r\n                $(\"#from\").html(`Distance From: ${origin}`);\r\n                $(\"#to\").text(`Distance to: ${destination}`);\r\n            }\r\n        }\r\n    }\r\n    // print results on submit the form initialize a new map search \r\n    $(\"#distance_form\").submit(function (e) {\r\n        e.preventDefault();\r\n        calculateDistance();\r\n        getLocation();\r\n    });\r\n});\r\n\r\n//gets current location \r\nfunction getLocation(){\r\n    var returnObject = {};\r\n    if('geolocation' in navigator){\r\n        navigator.geolocation.getCurrentPosition(\r\n        (position) => {\r\n        returnObject[\"lat\"] = position.coords.latitude;\r\n        returnObject[\"lng\"] = position.coords.longitude;\r\n        initMap(returnObject.lat,returnObject.lng);\r\n        });\r\n        if(typeof lat ==='undefined' && typeof lng==='undefined'){\r\n            return returnObject['lat'], returnObject['lng']\r\n        }\r\n    }\r\n}\r\n\r\n//main google maps API\r\nfunction initMap(latitude, longitude) {\r\n    const userLocation = { lat: latitude, lng: longitude };\r\n    const map = new google.maps.Map(document.getElementById(\"map\"), {\r\n    center: userLocation,\r\n    zoom: 15,\r\n    //mapTypeId: google.maps.mapTypeId.ROADMAP Not needed for now\r\n    });\r\n    // user marker\r\n    var mk1 = new google.maps.Marker({position: userLocation,\r\n    map,\r\n    });\r\n    \r\n    // This event listener calls addMarker() when the map is clicked.\r\n    google.maps.event.addListener(map, \"click\", (event) => {\r\n    addMarker(event.latLng, map);\r\n    });\r\n\r\n    google.maps.event.addListener( markers, 'click', function ( event ) {\r\n    var latitude = document.getElementById( \"maps_latitude\" ).value = event.latLng.lat();\r\n    var longitude = document.getElementById( \"maps_longitude\" ).value = event.latLng.lng();\r\n    userDestination = { lat: latitude, lng: longitude };\r\n    });\r\n\r\n //--------------------------//directions route here!-------------------------\r\n  let directionsService = new google.maps.DirectionsService();\r\n  let directionsRenderer = new google.maps.DirectionsRenderer();\r\n  directionsRenderer.setMap(map); // Existing map object displays directions\r\n  // Create route from existing points used for markers\r\n  const route = {\r\n      origin: origin,\r\n      destination: destination,\r\n      travelMode: google.maps.TravelMode.DRIVING,\r\n  }\r\n  directionsService.route(route,\r\n    function(response, status) { // anonymous function to capture directions\r\n      if (status !== 'OK') {\r\n        window.alert('Directions request failed due to ' + status);\r\n        return;\r\n      } else {\r\n        directionsRenderer.setDirections(response); // Add route to the map\r\n        var directionsData = response.routes[0].legs[0]; // Get data about the mapped route\r\n        if (!directionsData) {\r\n          window.alert('Directions request failed');\r\n          return;\r\n        }\r\n        else {\r\n          document.getElementById('msg').innerHTML += \" Driving distance is \" + directionsData.distance.text + \" (\" + directionsData.duration.text + \").\";\r\n        }\r\n      }\r\n    });\r\n}\r\n//--------------------------//directions route here!-------------------------\r\n//function to integate more markers on the map where location is the center lat lng\r\nfunction addMarker(location, map){\r\n    new google.maps.Marker({\r\n        position:location,//{ lat:latitude, lng:longitude},\r\n        label: labels[labelIndex++ % labels.length],\r\n        map:map,\r\n        draggable:true\r\n    });\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}